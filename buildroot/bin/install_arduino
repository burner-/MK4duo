#!/usr/bin/env bash

# associative array for the platforms that will be verified in build_main_platforms()
export MAIN_PLATFORMS='declare -A main_platforms=( [mega2560]="arduino:avr:mega:cpu=atmega2560" [due]="arduino:sam:arduino_due_x" )'

# make display available for arduino CLI
/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16
sleep 3
export DISPLAY=:1.0

# define colors
GRAY='\033[1;30m'; RED='\033[0;31m'; LRED='\033[1;31m'; GREEN='\033[0;32m'; LGREEN='\033[1;32m'; ORANGE='\033[0;33m'; YELLOW='\033[1;33m'; BLUE='\033[0;34m'; LBLUE='\033[1;34m'; PURPLE='\033[0;35m'; LPURPLE='\033[1;35m'; CYAN='\033[0;36m'; LCYAN='\033[1;36m'; LGRAY='\033[0;37m'; WHITE='\033[1;37m';

echo -e "\n########################################################################";
echo -e "${YELLOW}INSTALLING ARDUINO IDE";
echo "########################################################################";

# if .travis.yml does not set version
if [ -z $ARDUINO_IDE_VERSION ]; then
export ARDUINO_IDE_VERSION="1.8.9"
echo "NOTE: YOUR .TRAVIS.YML DOES NOT SPECIFY ARDUINO IDE VERSION, USING $ARDUINO_IDE_VERSION";
fi

# if newer version is requested
if [ ! -f $HOME/arduino_ide/$ARDUINO_IDE_VERSION ] && [ -f $HOME/arduino_ide/arduino ]; then
echo -n "DIFFERENT VERSION OF ARDUINO IDE REQUESTED: ";
shopt -s extglob
cd $HOME/arduino_ide/
rm -rf *
if [ $? -ne 0 ]; then echo -e """$RED""\xe2\x9c\x96"; else echo -e """$GREEN""\xe2\x9c\x93"; fi
cd $OLDPWD
fi

# if not already cached, download and install arduino IDE
echo -n "ARDUINO IDE STATUS: "
if [ ! -f $HOME/arduino_ide/arduino ]; then
echo -n "DOWNLOADING: ";
wget --quiet https://downloads.arduino.cc/arduino-$ARDUINO_IDE_VERSION-linux64.tar.xz
if [ $? -ne 0 ]; then echo -e """$RED""\xe2\x9c\x96"; else echo -e """$GREEN""\xe2\x9c\x93"; fi
echo -n "UNPACKING ARDUINO IDE: ";
[ ! -d $HOME/arduino_ide/ ] && mkdir $HOME/arduino_ide
tar xf arduino-$ARDUINO_IDE_VERSION-linux64.tar.xz -C $HOME/arduino_ide/ --strip-components=1
if [ $? -ne 0 ]; then echo -e """$RED""\xe2\x9c\x96"; else echo -e """$GREEN""\xe2\x9c\x93"; fi
touch $HOME/arduino_ide/$ARDUINO_IDE_VERSION
else
echo -n "CACHED: ";
echo -e """$GREEN""\xe2\x9c\x93";
fi

# define output directory for .hex files
export ARDUINO_HEX_DIR=$HOME/compiled_arduino_sketches/arduino_build_$TRAVIS_BUILD_NUMBER

echo -e "\n########################################################################";
echo -e "${YELLOW}INSTALLING DEPENDENCIES"
echo "########################################################################";

# Install: LiquidCrystal_I2C library
git clone https://github.com/kiyoshigawa/LiquidCrystal_I2C.git
mv LiquidCrystal_I2C/LiquidCrystal_I2C $HOME/arduino_ide/libraries/LiquidCrystal_I2C

# Install: LiquidTWI2 library
git clone https://github.com/lincomatic/LiquidTWI2.git
sudo mv LiquidTWI2 $HOME/arduino_ide/libraries/LiquidTWI2

# Install: Monochrome Graphics Library for LCDs and OLEDs
git clone https://github.com/olikraus/U8glib_Arduino.git
sudo mv U8glib_Arduino $HOME/arduino_ide/libraries/U8glib

# Install: TMCStepper Motor Controller library
git clone https://github.com/teemuatlut/TMCStepper.git
sudo mv TMCStepper $HOME/arduino_ide/libraries/TMCStepper

# Install: Adafruit Neopixel library
git clone https://github.com/adafruit/Adafruit_NeoPixel.git
sudo mv Adafruit_NeoPixel $HOME/arduino_ide/libraries/Adafruit_NeoPixel

# install the Alligator and STM32
echo -n "ADD PACKAGE INDEX: ";
DEPENDENCY_OUTPUT=$(arduino --pref "boardsmanager.additional.urls=https://github.com/stm32duino/BoardManagerFiles/raw/master/STM32/package_stm_index.json" --save-prefs 2>&1)
if [ $? -ne 0 ]; then echo -e """$RED""\xe2\x9c\x96"; else echo -e """$GREEN""\xe2\x9c\x93"; fi

INSTALL_DUE=$([[ $INSTALL_PLATFORMS == *"due"* || -z "$INSTALL_PLATFORMS" ]] && echo 1 || echo 0)

if [[ $INSTALL_DUE == 1 ]]; then
  echo -n "DUE: ";
  DEPENDENCY_OUTPUT=$(arduino --install-boards arduino:sam 2>&1)
  if [ $? -ne 0 ]; then echo -e "\xe2\x9c\x96 OR CACHED"; else echo -e """$GREEN""\xe2\x9c\x93"; fi
fi

# set the compiler warning level
echo -n "SET BUILD PREFERENCES: ";
DEPENDENCY_OUTPUT=$(arduino --pref "compiler.warning_level=none" --save-prefs 2>&1)
if [ $? -ne 0 ]; then echo -e """$RED""\xe2\x9c\x96"; else echo -e """$GREEN""\xe2\x9c\x93"; fi
